Serialization 

process of converting an object into a byte stream to save it to a file, 
send over a network, or store in memory


Deserialization:

the reverse process where the byte stream is converted back into a copy of the original object


for EG:

// Class must implement Serializable to allow serialization
class Demo implements Serializable

step2:

// Serialization

FileOutputStream file = new FileOutputStream(filename);
ObjectOutputStream out = new ObjectOutputStream(file))

out.writeObject(object);
System.out.println("Object has been serialized");

//object creations
Demo object = new Demo(1, "example");
        String filename = "file.ser";

//deserialized

FileInputStream file = new FileInputStream(filename);
             ObjectInputStream in = new ObjectInputStream(file)) {
            object1 = (Demo) in.readObject();
            System.out.println("Object has been deserialized");

-----

writeObject() converts the object into bytes and stores it.
readObject() reads the byte stream and recreates the object'

---------------------
Transient keyword::


if we use transient keyword means 
Transient fields are excluded from serialization.


Static fields are not serialized because they belong to the class, not instances

for EG:


import java.io.*;

// Class must implement Serializable to allow serialization
class Demo implements Serializable {
    public int a;
    public String b;

    public Demo(int a, String b) {
        this.a = a;
        this.b = b;
    }
}

public class SerializationExample {
    public static void main(String[] args) {
        Demo object = new Demo(1, "example");
        String filename = "file.ser";

        // Serialization
        try (FileOutputStream file = new FileOutputStream(filename);
             ObjectOutputStream out = new ObjectOutputStream(file)) {
            out.writeObject(object);
            System.out.println("Object has been serialized");
        } catch (IOException ex) {
            ex.printStackTrace();
        }

        // Deserialization
        Demo object1 = null;
        try (FileInputStream file = new FileInputStream(filename);
             ObjectInputStream in = new ObjectInputStream(file)) {
            object1 = (Demo) in.readObject();
            System.out.println("Object has been deserialized");
            System.out.println("a = " + object1.a);
            System.out.println("b = " + object1.b);
        } catch (IOException | ClassNotFoundException ex) {
            ex.printStackTrace();
        }
    }
}

