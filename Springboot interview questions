1. WHAT IS SPRINGBOOT? YOUR UNDERSTANDING?

    a java based spring fm used for rapid appli development to build standalone
    microservice. it has extrea support of auto configuration and embedded app
    server like tomcat, jetty etc. it provides a various dependcy that help
    to integrateed desired library in the project very easliy by just adding in 
    pom.xml.

2.DIFFFERENCE BTWN SPRING AND SPRINGBOOT?

 Spring:
    a comprehensive fm for building java application. featureslike
    dependcy injection, aop, transcation management etc
    configuration through xml file or annotations
    deveopers need to manuall manage dependice in pom file
    a. a webpplication fm baed on java
    b.provide tools and libraries to create customized web application
    c.spring is more complex thatn springboot
    d.takes an unopionated view
-------------------
springboot:
    extenstion of the spring fm it reduce the amount of boiler plate configuration
    provide autoconfi setup the appplicatino based on dependc presnti n class path
    include "starter" dependencies that bundle commonly used lib& frm 
    a.a module of spring 
    b.used to create a spring app project which can just run/eecute
    c.is less comples that spring
    d.takes an optinated view of a platofrm

3.FEATURE OF SPRINGBOOT?
      a.autoconfiguration - 
      springboot starter pom - project object model a dependency management 
                                making setup easier
      b.cli - you can create sprgin app using command line
      c.actuator - to monitor and manage your applications
                    have a variety of built in endpoints- such as 
        health metrices,evnri properties and more
      d.Embeded Servers - like tomacet, jetty or undertow and many more no need to install any other server
    advantage of using springboot:
        we don;t need to write any xml configuration, only few annotation are 
    required to do the configurations

4.WHAT IS SPRING ACTUATOR?

    a set of monitor tool to monitor the springboot app Health.
    there are variuos endpoints such as health,metrics,info and more
how do you enable actuator endpoints?
    spring-boot-starter-actuator: dependencies in pom.xml file
    endpoints enabled by default
commonly used actuators:
    /actuator/health: provide health of app
    /actuator/metrics: exposed app metrics
    /actuator/info: cutsom app inform
    /actuator/env: show prope from the appli env
how can we secure actuator endpoints in springboot?
    are sennsitve by default. if not secure then anyone can access it
    requred appropriate security configuration
    by authentication & authorization setting in app configuration files

4. WHAT DOES THE -- @SpringBootApplication --annoation do internally?

@SpringBootApplication
public class Myapplication{
        public static void main(String[] args){
                springApplication.run(MyApplication.class,args)
        }
}

it is  a combinatino of 3 annotations
@configuration
@EnableAutoConfiguration & 
@ComponentScan
    1.EnableAutoConfiguration: autotic configure your spring app based on dependcies
                                presentin in the class path
                            configure beans in the class path & scan the dependencies
                            acccording to the application need.
    2.ComponentScan:  the need for manual bean registariotn is no needed
                    automatically detect and register beans
                        this scan the components(@Service, @Component etc) inthe
                        package of annotated class and it's sublclass
    3.CONFIGURATION: used to configure the bean and
                    -- packages -- in the class path
-----------------------------

@ComponentScan: spring will scan the specified package for class's annotated
with @service,@repo or @controller thenn registed as bean in springapplicaton context
@ComponentScan(basePackage ="com.examp.demo")


5.WHAT ARE SPRINGBOOT STARTERS?

    when you include this starter in you applicaion. it inculded commonly used
    libraries and frm in to a single depeendcny, refduce boiler plate code
    it contains auto configuration support

commonly used springboot starters?
    Springboot-starter-web : include RESTful service
    sprinboot-starter-data-jpa: include spring data jpa & hibernate
    springboot-starter-security: for security
    Springboot-starter-test: eg junit or mockito

6. what is springboot dependecny management?
    it will configure automatically without specifying the version
    for any of that dependencies.

6.concept of Dependency injection in springboot?
    follows ioc principle
we can do a filed injection,setter injectino & construcot injection
@Autowired

for example
a service class required repo clas to access db
instead of instntiating the repo clas inside service class, 
springboot inject this depencny through the annotation @Autowired

 anothery way is to used @Inject

7.it is possible to change of the embedded tomcat server in springboot?
    yes we can, change the server.port= 
    properties in app.prop files

8. what is spring initializer?
    to create a initial springboot prject structure, and provide a
    maven on graddle file to build your code. setting up our project from scratch

9. how do you secure a springboot application?
    use @EnableWebSecurity
    using spring security. add spring-boot-starter-sercuurity dependncy
    and configure security settings using websecurity configure adapter.

10. what is starter dependencies?
     it is a maven template that contain collection of all the relevant
    transitive dependencies needed to start a particulare functionalities. like
    we need to import springbo0t-starter web dependncy for creating a web application

11. what is the main class in springboot?

    springboot has a main class which starts up the springappplicationcontext

12. latest version of springboot is 2.6.0 java 15 onwards it support and much more

13. spring bean?
        it is an object that is managed by the spring ioc (inversion of control)
    ioc container . Beans are created configured and managed by Spring.

how do you define a spring bean in a springboot application?
        using annotation like @Component, @Service @Repository
    or by using the @Bean annotaion in a configuraion class

-------the above are not checked--




14. what is the use of @RestController annotaion in springboot?
    
    RestController is the specializedd version os @Controller class
    used to build restfull web service
    combination of 
    @Controller :
    @ResposeBody :
    indicates that the methods in the class return the response body 
DIFFERENCE BETWEEN @CONTROLLER & @RESTcONTROLER
@Controller:
    to mark a class as spring mvc controller
    responsible for handling incoming HTTP requests & process them
@RestController:
    a specialized version of@Controller for building restful web serv
    handle http request and return json or xml 
this have the @ResponseBody annot automatically applied to themd

    @Controller- that handle web request and return view names
        it is the combination of @Controller & @ResponseBody
    this will return data directly usally in json/xml response

23. what is @RequestMapping used for?
    used to map web requesrt to specific handler method in a controller

24. use of SpringbootDev tools>

    provide fearures to make development faster, automatic restart, live reloads & 
    configurations for imporved experince

15. what is spring data jpa?
comes under data access layer
provide cutom queries @Query annoation
builtin paginatino & sorting

    add> spring-boot-starter_data-jpa in pom.xml file
    define an entity that maps to database table
    create a Respository interface that extend JpaReposotiry<entityname,primaydatatype>
     we can define custom query method here
    cerate a service to use resposityr  do @Autowired 
    create a Controller to handle HTTP requests

    for working with relation database & interacting with db and reduce boiler plate
    code required for common db operions like CRUD and querying database
         java persistence api- it helps you create repositories that handle CRUD
    Operations automaticlaly.

How do you define  a database connection in springboot?
in application.properties or yml file
#database configurations
    spring.datasource.url=
    spring.datasource.username
    spring.datasource.passowrd
    spring.datasource.driver-classname=com.mysql.cj.jdbc.Driver

How can you handle exception in springboot application?

    Centralized exception handling with @ControllerAdvice annotation
    you can create a global exception handler classs that catch exception
    thrown by any controler in your application.
    use @ExpcetionHandler methods within it to handle different types of exceptioons
    Custom exception class with @ResponseStatus

For EG:
1. first create a Custom Exception:

eg public class ResourceNotFoundException extends RuntimeException{
    public ResourceNotFoundException(String message){
        super(message)
    }
}

create a controller:

@RestController
@RequestMapping("/api")
public class MyController{

    @GetMapping("/resource/{id}")
    public ResponseEntity<String> getResource(2PathVariable String id){
            if("1".equals(id)){
                    return ResponsEntity.ok("found");
            }else{
                throw new ResourceNotFoundException("not found" + id);
            }
    } 
}
-----this controller throw exception
Handler Exception globally: using @ControllerAdvice & @ExceptionHandler to handle

@ControllerAdvice
public class GlobalException{t
    
    @ExceptionHandler
    public ResponseEntity<String> handlResourNOtfoundException(ResourceNotFoundException ex){
        return new ResonseEntity<>(ex.getMessage().HttpStatu.NOt_Found);
    }
}

22. explain the concept of Profile in springboot?
        you can have differnet confi for dev, tesing, production etc
        to make it available only in certain environments 
        for actvating profile:
        setting an evn variable before staring your applciaton
        use JVM system property 
        specigy in your applicaton.properites or yml file 
        with spring.profile.active

@Service
@Profile("dev")
public class DevService{
    public String getMesg(){
        return "devplnt "
    }
}
@Service
@Profile("prod")
public class prodService{
    public String getMesg(){
        return "prod "
    }
}
-activate profiles using||  spring.profiles.active=dev

or set the active profile in main class of springbooot application

@SpringBootApplication
public class Myapp{
    public static void main(String[] args){
        SpringApplication app = new SpringApplication(Myapp.class);
//      app.setAdditinLProfile("dev");
        app.run(args);
    }
}

23. How can you impement cachingin a springboot application?
            make your app faster, to remember things that already 
            done by your applicaiton
steps to implement caching:

    1.Spring-boot-starter-cache in pom.xml file
    2.@EnableCaching in main class wwhich activate caching

    3. use cache annotations:
    @Cacheable: method lvel to cache theri results
                stored in cache
    @CachePut: updates the cache with the result of the method
    @CacheEvict: remove data from the cache used for deleting outdated or unused

add: 
Spring.cache.cache-name=
spring.cache.caffeline.

24. what is the purpose os the @Scheduled Annotations?

    executed for a regular interval of time
    including fixed delay using cron expressions
    a complex scheduling pattern like every day at 6pm.

also do @EnableScheduling annotation on your configuration class

    public class SchduleTask{
        @Scheduled(fixedRate = 3000)
        publiv void reprotCurrentTime(){
            System.out.println("currenttime is"+ System.currentTimeMillis());
        }
    }

27. how can you enable cross orgin request in a spring boot application?

    enable cross orgin request in a springboot applicaiton is essential
for allowing web applicaton hosted on  a diffeernt domains to interact with
your server. this can be achied using spring security
and @Crossorgin annotaiton in method leverl or class level
for endpoints

@RestController
public class test{
       @CrossOrigin(origins = "http://localhost:3000")
        @GetMapping("/data")
        public String example(){
            return "cross orgin reuerqt";
        }
}
it allows request from http://localhost:3000 to access the /data endpoiont
simple frontend application (e.g., using React or Angular) that makes an 
HTTP request to your Spring Boot backend. If CORS is configured correctly,
the browser will allow the request.

concept of Spring Boot Actuator metrics?
to monitor & manage your applicaton
gather various metics about your applciaon run time behaviour and health

what is the purpose of @Transactional annotation?

    here by marking this method as @Transcation anno
    make sure either both the name and email are updated or neither 
    if something goes wrong, it pretned this never happend
    rolling back the transcation , where no changes are saved

@Transcation
public void updateUser(Long userID, String email){
    User user = userReposityr.findById(userID);
    user.setName(name);
    user.setEmail(email);
    userRepository.save(user)
}

how can you implemetn security in a springboot applicaton?

Expalain the role of the spring boot dev tools?

need to add spring-boot-devtools in pom.xml file
when you change any thing no need to restart it automatiicaly did it

--------------------------------------------------------------------------------------------------------------------
1.What is Spring Boot?
  Spring Boot is built on top of the Spring framework to create stand-alone 
  RESTful web applications with very minimal configuration and there is no need of external servers to run the application
  because it has embedded servers like Tomcat and Jetty etc.
  
  Spring Boot framework is independent.
  It creates executable spring applications that are production-grade.

2.features?

a.Auto-configuration – 
      Spring Boot automatically configures dependencies by using 
      @EnableAutoconfiguration annotation and reduces boilerplate code.

b.Spring Boot Starter POM – (project object model.xml)
      These Starter POMs are pre-configured dependencies for functions 
      like database, security, maven configuration etc.

c.Spring Boot CLI (Command Line Interface) –
    This command line tool is generally for managing dependencies,
    creating projects and running the applications.

d.Actuator –
    Spring Boot Actuator provides health check,
    metrics and monitors the endpoints of the application.
    It also simplifies the troubleshooting management.

e.Embedded Servers – 
    Spring Boot contains embedded servers like Tomcat and Jetty 
    no need to setup/configure dispacher serverlet ...
    for quick application run. No need of external servers.

3.Advantages of using springboot?

Easy to use: The majority of the boilerplate code required to create a Spring application
    is reduced by Spring Boot.
Rapid Development: Spring Boot’s opinionated approach and auto-configuration enable developers 
    to quickly develop apps without the need for time-consuming setup, cutting down on development time.
Scalable: Spring Boot apps are intended to be scalable.
    This implies they may be simply scaled up or down to match your application’s needs.
Production-ready: Metrics, health checks, and externalized configuration 
    are just a few of the features that Spring Boot includes and are designed for use in production environments.

4. Define the Key Components of Spring Boot.
The key components of Spring Boot are listed below:

Spring Boot starters
Auto-configuration
Spring Boot Actuator
Spring Boot CLI
Embedded Servers

5. Why do we prefer Spring Boot over Spring?

Feature   --   Spring  --  Spring Boot
Ease of use --  More complex --  Easier
Production readiness -- Less production-ready -- More production-ready
Scalability --Less scalable --More scalable
--------------------

Top 10 interview question 

1.how springboot autoconfiguration works internally?
2.difference btwn spring, spring mvc & springboot?
3.ico & dependncy injection ?
4.thr spring bean lif cycle in action?
