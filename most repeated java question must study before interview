
what is java main() method?
when we execute our java pgm the jvm will looks for main method to begin 
and only one main metho
public static void main(String[] args)

a. String[] args
   a parameter passes command line argument into java applcation
extracting values from the command line in string format ie
 String[] args = {"1","2"}; these stored in args[0], args[1]
later be stored in args array

b. static keyword? in main method?

to make it as globally access across the class

static variable - a public access eg publlic summing pool
static method - are like shared serverice eg secuity gurad 
               any body can access

what is abstract class in java?

            abstract class shape {
              public abstrat void draw();
              public void erase   // a concrete method ie non abstract method
               System.out.println("a"); 
              }
            }
            if a subc/ child clas inhert  the shape class
            class circle extends Shape{
            // the abstract method must be defined here 
               @Override
               public void draw(){
                   System.out.println(drawing a cirvle);
               }
      }
what is an interface?

   Here every method is by default abstract method
   interface are used to solve the problem of multiple inhertance in java
   multipel inheritace is not possible in java so interface takes place

what is package in java?

buit in package - predefined classes and interccae like java.util etc 
user defined package - to keet our poject structured & manageble
             to  organized the code 

what is the used of this keyword in java?

to refer the curretn instance
also used to call another constructro within the same class

constructor in java?
when you want to initializes the value that are declared in the class
it doesn't have a return type 
always named as the class name
types
default  construcotr
parameterized constructor

how is method overloading is different from method overriding?

a.method overloading -
   same method name, different parameters, determined at compile time
b.method overriding-
   same methodname, and same parameters but implmented in subclass, runtime determination.

epalin the different between final & finally keyword?

final--keyword
   in variable- once assigned their value cannot be changed
   in method- which cannot be overriden by sub class
   in class- cannot be subclassed

finally ?
eg 
         try{
            int sum = 10/0;
            System.out.println(sum);
         }catch(ArithmeticException e){
            e.printStackTrace();
         }finally{
         System.out.println("this will be executed regardless")
         } // whatever happen this finally block will executed

what are java collections and why are they importatnt?

list-
set-
map-
queue-

   List<Integer> student = new ArrayList<>();
   student.add(1);
   student.add(1);
   student.add(2);
   student.add(2);
   for(integer x : student) System.out.println(x);

everything get printed here 1 1 2 2
list allows duplicate values

//HashSet

   Set<Integer> student = new HashSet<>();
   student.add(1);
   student.add(1);
   student.add(2);
   student.add(2);
   for(Integer x: student)Systtem.out.println(x);

here in set, only 1 and 2 get printed bcz of unique value get stored in set

//HashMap

Map<String, Integer> students = new HashMap<>();
student.put("alice",1);
student.put("alice",1);
student.put("alice",2);
student.put("alice",2);
for( Map.Entry<String,Integer> entry:students.entrySet()){
System.out.println(entry.getKey() + " : " + entry.getValue());k
}
in map 
the key should be unique
the values should be duplicated

//LinkedList

Queue<String> students = new LinkedList<>();
   student.add("alice");
   student.add("B");
   student.add("c");
   student.add("d");
System.out.println("current" students.poll)
System.out.println("next" students.peack)
----java collections------------------------------------------------------------------
List- that allows duplicate value
Set - doesn't allow duplicate value
Map- stored key value and each key should be unique
Queue- ordered collection that follows fifo or priority based ordering
------------------------------------------------------------------------
describe checked and unchekced exception?

Exception in java - are issues that arise during progm executino which distrupt the normal
flow of the application
types of exception

a.checked exception - some predefined declared in java libraries eg arrayoutofIndex expceiton etc...
      that must be handled at compile time, as they represent predicitabe issues
b.unchecked exception - it is not officlay declared in java libraries
      occurs at run time, dosen't require explicit handling,often arising from
      logical errors or unexpceted conditions

how do you create a custom Exception in java?

class InvalidAgeException extends Exception{
      public InvalidAgeException(String message){
            super(message);
      }
}
public class A{
   public static void checkAge(int age) throws InvalidAgeException{
         if(age<15 || age > 30 ) throw new
         invalidAgeException(age + "is not allowed sorry!")
         else System.out.println("alway wlcm")
   }
}
public static void main(String[] args){
   try{
      checkAge(10);
   }catch(invalidAgeException e)
      e.printStackTrace();
}

explain try catch and finally block?
   try block- the code that might throws an arror is kept inside the try block
   catch block- for handling the exceptions
   finally block- it executes regardless whateve happn in try-catch it execute anyways

20.describe == and .equlas() in java?

   string a = new String("hello"); //point to a memory location
   String b = new String("hello"); //point to a memory location
   System.out.println(a==b); //false
even thought the content is same but a and b point to differnt-
      -memory location so techincally it's different
      System.out.println(a.equals(b));

but for other primitive data types
   int a=10;
   int b=10;
   system.out.println(a==b); it is true 

so Equality operator (==)
   check two refernce variable point to the same memory location

for .equals()
   it will check if two objects have the same data. specific for strings

21.Describe java memory model and how memory is allocated?

in java memory is allocated in two types
   a.Heap - 
      large memory space used for storing object, instance, varible and class variables
      objects that are no longer available or recheable are managed by jvm'S garbage collector
   b.Stack
      each thread in java has its own stack memory.
      Stack memory is generally limited and temporary.

hOW MEMORY IS ALLOCATEDD?
   1. object creation: the jvm first determine the size of the object based on its fields.
   2. heap allocation: then jvm allocated a stack of memory from the heap.
   3. initialization: the ojects fields are initialized to their default values.
   4. Reference assignment: a reference is the newly created obj is assigned to a variable
   5.Garbage collection: it periodically scan the heap for objects that are no longer
                        recheable by any active threads

HOW DOES GARBAGE COLLECTION WORK IN JAVA?
      It is the automated process that frees up memory by removing objects that are no longer
   in use or is being accessible by the program
   1.AUTOMATIC MEMORY MANAGEMENT: garbage collectors which operates inside the Jvm MANAGES garbage
                                 collection
   2.HEAP MEMORY: as long as oject is referenced by other objects or variable, it remains active
   3.MARK & SWEEP PROCESS: MARK marks the objects as "in use" which is actively referenced.
                           unmarked objects are eventully deleted.

23.WHAT IS LAMBDA EXPRESSION AND HOW IT IS USED IN JAVA?

it is a consious way to represent an anonymous function
Syntax: (parameters)-> expression
(int a ,int b)-> a+b

public static void main(String[] args){
   new Thread(new Runnable(){
   @Override
   public void run(){
      System.out.println("Thread is running")
   }
   }).start();

//using lambda
new Thread(()-> Ssytem.out.println("Thread is running")).start();
}

EXPLAIN THE IMPORTANCE OF SYNCHRONIZED KEYWORD?

Ensures that only one thread can access the synchronized session of the code
at a time, blocking other threads until the lock is released.

for eg:
deadlock..

class counter{
   //if ? a global variable ie anybody can access it right??
      so here synchornized help us

      private int count = 0;
      public synchronized void increment(){
         count++;
      }
      public int getCount(){
         return count++;
      }
}   
public class demo{
   public static void main(String[] args){
         Counter counter = new Counter();
         //creating  a new thred

         Thread t1= new Thread(()->{
            for(int i=0; i< 100: i++){
               counter.increment();
            }                     
         });
//thread 2
         Thread t2= new Thread(()->{
            for(int i=0; i< 100: i++){
               counter.increment();
            }                     
         });
t1.start();  // we start the thread
t2.start();

try{
   t1.join();
}catch(Exception e){
      e.printStackTrace();
}

try{
   t2.join();
}catch(Exception e){
      e.printStackTrace();
}
Syste.out.println(counter.getCount());  
// multipel thread increases counter twice so parallel
//we used snchornized should be 200
   }
}




----------------------------------------------------------------------------------
 1.why pointer is not used in java
 
 we know jvm is responsbile for memory allocation in java, to stop direct access to memory in java pointer is discourged
 and they are unsafe
 
 2.what is jit compiler?

---------concluseion------------
so jdk is for developer to create java applications
jre is for used to run java application
------------
 from --scr code to (jdk for conversion) --byte code
 from --byte code to (jvm for conversion (insidee jvm we have[jit compiler and interpreter])) --machine code

jdk--java development kit that provide all the tools required to
 develop,complile and run the java app
 jdk we have
 compiler - 
 debugger
 jre - bunch of libraries

jvm- java virtual machine
 key component - memory management = allo/deallo memory for the applcation
 -garbage collection = automatically  cleans up unused memory
 -security = 


what are access modifier?

public if a class, method or variable is public is can be access anywhere
private - elements is accessible within the class 
protected- accessible within same package and by sub class
         use this when you want to give access to the sub class, even they are ins
differnet package
default - when nothing is specifed java applies default
      no modifier when you want to limit access to class within the same package
but keep members hidden from classes in other package


 
 3.what is marker interface?
 
 an interface which has no data member and member fucntions 
simply an empty interface eg serializable , cloneable etc
then why dont we have it, means it tells the compiler that someting to do with it
particular thing to do to for jdk and compiler

 hint ctrl shift t
 public interfcae Cloneable{
 }

4. can we override private or static method in java??

we cannot overrid privat method- we can only create another private methid
with same name in the child class

for static method if you override then it will hide the supercalss method
known as method hidding...

5. Does finally alwas execute in java?

not in the following case
1. "System.exit()" function  when we cally it explicitally
2. system crash

6. what method does object class have?

clone()
equals()
finalize()
hashcode() return hascode value for the oject
getClass()

7.what is singleton class in java? how can we make a class singleton??
 only one instance is created at any givenn time in one JVM


public class Animal{
private static Animal single_instance = null;

private Animal(){
}

public static Animal getIntance(){
 if(single_instance ==null)
   single_instance = new Animal();
}
 return single_insatnce;
}

1st make sure make your constructo as private to make sure nobody can create any
then to create one oject, we have to crearte one

2nd,  public static Animal single_instance= null;

3rd we have to create a static block for the same which will return the same class oject

-----

is java is pass by value or pass by reference??

pass by value-- sending memory address of the value
pass by reference-- reather than passing real memory address, 
                     it send the copy in another mem location

