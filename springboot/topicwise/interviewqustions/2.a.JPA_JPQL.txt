 Spring Data JPA

@Query annotation is used in  Spring Data JPA repo to define custom JPQL
java persistence query language or native SQL querires from more complex databse operation

place @Query on repo methods
specify the JPQL or native query as a String arguments
it executed when the method is called
it support parameter binding for dynamic queries

How to use @Query in a Spring Boot project

Define an Entity

@Entity
public class Book {
    @Id
    private Long id;
    private String title;
    private String author;

Step 2: Create Repository Interface

public interface BookRepository extends JpaRepository<Book, Long> {

// JPQL query to find books by author name

//method parameter is bound to the named parameter

    @Query("SELECT b FROM Book b WHERE b.author = :authorName")
    List<Book> findBooksByAuthor(@Param("authorName") String authorName);

// Native SQL query to find books with title containing keyword

    @Query(value = "SELECT * FROM book WHERE title LIKE %:keyword%", nativeQuery = true)
    List<Book> findBooksByTitleKeyword(@Param("keyword") String keyword);
}

//

The variable authorName used in the method parameter is bound to the named parameter :authorName in the JPQL query. When you call findBooksByAuthor("John"), the method passes "John" as the value of authorName, which gets injected into the query at :authorName.